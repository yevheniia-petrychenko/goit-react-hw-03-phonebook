{"version":3,"sources":["components/ContactList/ContactCard.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["ContactCard","name","number","id","onDelete","className","onClick","ContactList","contacts","map","ComtactForm","state","formReset","setState","handleSubmit","event","preventDefault","props","onSubmit","handleInputChange","currentTarget","value","this","type","onChange","Component","Filter","App","filter","formSubmitHandl","newname","found","forEach","toLowerCase","alert","prevState","uuidv4","getVisibleContact","normalizedFilter","contact","includes","filterHandle","deleteContact","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ContactForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6e9f61d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst ContactCard = ({ name, number, id, onDelete }) => {\r\n  return (\r\n    <li key={id}>\r\n      <span>{name}</span>\r\n      <span>{number}</span>\r\n      <button\r\n        className=\"deleteButton\"\r\n        onClick={() => {\r\n          onDelete(id);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactCard.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactCard;\r\n","import PropTypes from 'prop-types';\r\nimport ContactCard from './ContactCard';\r\nimport './contactList.css';\r\nconst ContactList = ({ onDelete, contacts }) => {\r\n  return (\r\n    <ul className=\"contactList\">\r\n      {contacts.map(({ name, number, id }) => {\r\n        return (\r\n          <ContactCard\r\n            name={name}\r\n            number={number}\r\n            id={id}\r\n            key={id}\r\n            onDelete={onDelete}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { Component } from 'react';\r\nimport './contactForm.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ComtactForm extends Component {\r\n  state = {\r\n    number: '',\r\n    name: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  formReset = () => {\r\n    this.setState({ number: '', name: '' });\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.formReset();\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { number, name } = this.state;\r\n    return (\r\n      <div>\r\n        <form className=\"form\" onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Number\r\n            <input\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n\r\n          <button className=\"addBtn\">Add Contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ComtactForm;\r\n","import './filter.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className=\"filterLabel\">\r\n    Find contacts by name\r\n    <input type=\"text\" name=\"filter\" value={value} onChange={onChange}></input>\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\nimport ContactList from './components/ContactList/ContactList';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  formSubmitHandl = ({ name, number }) => {\n    let newname = name;\n    let found = false;\n    this.state.contacts.forEach(({ name }) => {\n      if (newname.toLowerCase() === name.toLowerCase()) {\n        alert(`${name} is already in contacts`);\n        found = true;\n        return;\n      }\n      if (found) {\n        return;\n      }\n    });\n    if (found) {\n      return;\n    }\n    this.setState(prevState => {\n      return {\n        contacts: [\n          ...prevState.contacts,\n          ...[{ name: newname, number: number, id: uuidv4() }],\n        ],\n      };\n    });\n  };\n\n  getVisibleContact = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  filterHandle = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\n      };\n    });\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <ContactForm onSubmit={this.formSubmitHandl} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.filterHandle} />\n        <ContactList\n          contacts={this.getVisibleContact()}\n          onDelete={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}